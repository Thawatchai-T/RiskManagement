/*
 * File: app/store/Combo/OccupationTypeStore.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('RiskManagement.store.Combo.OccupationTypeStore', {
    extend: 'Ext.data.Store',
    alias: 'store.occupationtypestore',

    requires: [
        'RiskManagement.model.Combo.OccupationTypeModel',
        'Ext.data.proxy.Memory'
    ],

    constructor: function(cfg) {
        var me = this;
        cfg = cfg || {};
        me.callParent([Ext.apply({
            storeId: 'Combo.OccupationTypeStore',
            model: 'RiskManagement.model.Combo.OccupationTypeModel',
            data: [
                {
                    id: 1000,
                    Name: 'earum'
                },
                {
                    id: 674,
                    Name: 'non'
                },
                {
                    id: 974,
                    Name: 'quis'
                },
                {
                    id: 994,
                    Name: 'explicabo'
                },
                {
                    id: 854,
                    Name: 'odit'
                },
                {
                    id: 343,
                    Name: 'totam'
                },
                {
                    id: 754,
                    Name: 'ut'
                },
                {
                    id: 313,
                    Name: 'asperiores'
                },
                {
                    id: 597,
                    Name: 'quis'
                },
                {
                    id: 97,
                    Name: 'sint'
                },
                {
                    id: 130,
                    Name: 'aut'
                },
                {
                    id: 636,
                    Name: 'aliquam'
                },
                {
                    id: 613,
                    Name: 'cum'
                },
                {
                    id: 791,
                    Name: 'ut'
                },
                {
                    id: 468,
                    Name: 'quibusdam'
                },
                {
                    id: 994,
                    Name: 'commodi'
                },
                {
                    id: 319,
                    Name: 'eligendi'
                },
                {
                    id: 377,
                    Name: 'delectus'
                },
                {
                    id: 878,
                    Name: 'assumenda'
                },
                {
                    id: 595,
                    Name: 'praesentium'
                },
                {
                    id: 675,
                    Name: 'at'
                },
                {
                    id: 703,
                    Name: 'reiciendis'
                },
                {
                    id: 444,
                    Name: 'et'
                },
                {
                    id: 769,
                    Name: 'distinctio'
                },
                {
                    id: 203,
                    Name: 'et'
                },
                {
                    id: 80,
                    Name: 'magni'
                },
                {
                    id: 12,
                    Name: 'pariatur'
                },
                {
                    id: 563,
                    Name: 'quia'
                },
                {
                    id: 470,
                    Name: 'est'
                },
                {
                    id: 296,
                    Name: 'fugiat'
                }
            ],
            proxy: {
                type: 'memory'
            }
        }, cfg)]);
    }
});